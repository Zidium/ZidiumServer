@model Zidium.UserAccount.Models.EventTypeProcessModel

@if (Model.ModalMode)
{
    Layout = "~/Views/Shared/_ModalDlgLayout.cshtml";
}

@{
    ViewBag.Title = "Пометить старые события как обработанные";
    ViewBag.ActiveMenuItems = "Manage,EventTypes";
}

@if (!Model.ModalMode)
{
    @Html.Partial("_PageTitle")
}

@{Html.BeginForm();}

@Html.AntiForgeryToken()
@Html.HiddenFor(model => model.EventTypeId)
@Html.HiddenFor(model => model.ModalMode)
@Html.HiddenFor(model => model.ReturnUrl)

<div class="alert alert-info">
    Все события этого типа с версией меньше или равной указанной, будут получать заданные вами параметры
</div>

<div class="row">
    <div class="col-sm-12">
        @Html.EditorFor(m => m.OldVersion, "LabeledEdit", new { NoGroup = true })
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        @Html.EditorFor(m => m.Importance, "LabeledEdit", new { NoGroup = true })
    </div>
</div>

<div class="row">
    <div class="col-sm-12">
        @Html.EditorFor(m => m.MarkAsProcessed, "BoolEdit", new { NoGroup = true })
    </div>
</div>

<div class="row" style="text-align: @(Model.ModalMode ? "right" : "left")">
    <div class="col-sm-12">
        <input type="submit" value="Обработать" class="btn btn-primary" />
        &nbsp;
        @if (!Model.ModalMode)
        {
            <a class="btn btn-default" href="@Model.ReturnUrl">Отмена</a>
        }
        else
        {
            <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
        }
    </div>
</div>

@{Html.EndForm();}
