@using Zidium.Core.AccountsDb
@using Zidium.Core.Common.Helpers
@using Zidium.UserAccount.Helpers

@model Zidium.UserAccount.Models.ComponentTreeDetails.UnittestDetailsStateModel

<p>   
    <span id="unittest-details-state-status">
        @Html.MonitoringStatusLabel(Model.Status, Model.StatusEventId, 14)
    </span>
    <span class="simple-text-value" id="unittest-details-state-duration">
        @TimeSpanHelper.Get2UnitsString(Model.StatusDuration)
    </span>
    
    @if (Model.CanEdit)
    {
        if (Model.CanRun)
        {
            <button id="unittest-details-run-unittest" type="button" data-id="@Model.Id" class="btn btn-default btn-xs">Запустить</button>
        }

        if (Model.IsEnabled)
        {
            <button id="unittest-details-disable-unittest" type="button" data-id="@Model.Id" class="btn btn-default btn-xs">Выключить</button>
        }
        else
        {
            <button id="unittest-details-enable-unittest" type="button" data-id="@Model.Id" class="btn btn-default btn-xs">Включить</button>
        }
        <button id="unittest-details-delete-unittest" type="button" data-id="@Model.Id" class="btn btn-default btn-xs">Удалить</button>
    }
</p>

<p>
    @if (Model.RuleData != null)
    {
        if (Model.TypeId == SystemUnitTestType.HttpUnitTestType.Id)
        {
            <span class="simple-text-value">Выполняет Http-запрос</span>
            <br/>
            <a target="_blank" href="@Model.RuleData">@Model.RuleData</a>
        }
        else if (Model.TypeId == SystemUnitTestType.PingTestType.Id)
        {
            <span class="simple-text-value">Выполняет Ping-запрос</span>
            <br/>
            <span>@Model.RuleData</span>
        }
        else if (Model.TypeId == SystemUnitTestType.DomainNameTestType.Id)
        {
            <span class="simple-text-value">Проверяет дату окончания регистрации домена</span>
            <br/>
            <a target="_blank" href="@Model.RuleData">@Model.RuleData</a>
        }
        else if (Model.TypeId == SystemUnitTestType.SslTestType.Id)
        {
            <span class="simple-text-value">Проверяет дату окончания Ssl-сертификата</span>
            <br/>
            <a target="_blank" href="@Model.RuleData">@Model.RuleData</a>
        }
        else if (Model.TypeId == SystemUnitTestType.SqlTestType.Id)
        {
            <span class="simple-text-value">Выполняет Sql-запрос</span>
            <br/>
            <span class="text-wordbreak">@Model.RuleData</span>
        }
    }
</p>

<p>
    <span class="simple-text-header">Последнее выполнение</span><br />
    <span class="simple-text-value">@(Model.LastExecutionDate != null ? DateTimeHelper.GetRussianDateTime(Model.LastExecutionDate) : "нет")</span>
</p>

<p>
    <span class="simple-text-header">Результат</span><br />
    <span class="simple-text-value">@Model.LastExecutionResult</span>
</p>
    
@if (Model.LastExecutionResultProperties != null)
{
    <p>
        <span class="simple-text-header">Дополнительные данные</span><br/>
        @Html.ExtentionPropertiesTable(Model.LastExecutionResultProperties)
    </p>
}

<script>
    $('#unittest-details-run-unittest').click(function() {
        var me = $(this);
        var url = '@Url.Action("RunNowAjax", "Unittests")';
        var id = me.data('id');
        var data = { id: id };
        smartButtons.beginAction(me);
        smartBlocks.doAjax(url, 'POST', data, function () {
            componentTreeDetails.accordionReloadCurrentGroup(me);
            submitForm();
        }, function () {
            smartButtons.endAction(me);
        });
    });

    $('#unittest-details-enable-unittest').click(function() {
        var me = $(this);
        var url = '@Url.Action("EnableAjax", "Unittests")';
        var id = me.data('id');
        var data = { id: id };
        smartButtons.beginAction(me);
        smartBlocks.doAjax(url, 'POST', data, function () {
            componentTreeDetails.accordionReloadCurrentGroup(me);
            submitForm();
        }, function () {
            smartButtons.endAction(me);
        });
    });

    $('#unittest-details-disable-unittest').click(function() {
        var me = $(this);
        var url = '@Url.Action("DisableAjax", "Unittests")';
        var id = me.data('id');
        var data = { id: id };
        dialogs.showModal(url, 'Выключение проверки', function() {
            componentTreeDetails.accordionReloadCurrentGroup(me);
            submitForm();
        }, data);
    });

    $('#unittest-details-delete-unittest').click(function() {
        var me = $(this);
        var url = '@Url.Action("DeleteAjax", "Unittests")';
        var id = me.data('id');
        var data = { id: id };
        dialogs.showModal(url, 'Удаление проверки', function() {
            hideDetailsPanel();
            submitForm();
        }, data);
    });
</script>