@using Zidium.Core.Common.Helpers
@using Zidium.Storage
@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models

@model Zidium.UserAccount.Models.ComponentTreeDetails.UnittestDetailsHistoryModel

<p>
    История за
    <span class="btn-group space-right" data-toggle="buttons" id="unittest-details-history-buttons">
        <label class="btn btn-default btn-xs" id="btn-stats-hour">
            <input type="radio" autocomplete="off">
            Час
        </label>
        <label class="btn btn-default btn-xs active" id="btn-stats-day">
            <input type="radio" autocomplete="off" checked>
            День
        </label>
        <label class="btn btn-default btn-xs" id="btn-stats-week">
            <input type="radio" autocomplete="off">
            Неделя
        </label>
        <label class="btn btn-default btn-xs" id="btn-stats-month">
            <input type="radio" autocomplete="off">
            Месяц
        </label>
    </span>

    <span id="unittest-details-history-loader" class="collapse">
        <img src="~/Content/Icons/ajax-loader-white.gif" />
    </span>
</p>

<div id="unittest-details-history-timeline">
    <img src="~/Content/Icons/ajax-loader.gif" />
</div>

@if (Model.Statuses.Length > 0)
{
    <table id="unittest-details-history-table" class="table simpleTableClear table-condensed table-fixed">
        <thead>
            <tr>
                <th class="column-date">Начало</th>
                <th class="column-date">Окончание</th>
                <th class="th-result">Статус</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var status in Model.Statuses)
            {
                var color = GuiHelper.GetStrongFgColor(status.Importance);
                <tr style="color: @color">
                    <td>
                        @DateTimeHelper.GetRussianDateTime(status.StartDate)
                        <br />
                        <span class="status-duration">@GuiHelper.TimeSpanAs2UnitString(status.Duration)</span>
                    </td>
                    <td>
                        @DateTimeHelper.GetRussianDateTime(status.EndDate)
                        <br />
                        <span class="status-count">
                            @status.Count раз
                        </span>
                    </td>
                    <td>
                        <a title="@status.Message" href="@Url.Action("Show", "Events", new { id = status.EventId})" target="_blank">@status.Message</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

}
else
{
    <p>Нет истории выполнения</p>
}

<script>
    $('#unittest-details-history-buttons #btn-stats-hour').click(function () { unittestDetailsHistoryLoadStats('@TimelineInterval.Hour'); });
    $('#unittest-details-history-buttons #btn-stats-day').click(function () { unittestDetailsHistoryLoadStats('@TimelineInterval.Day'); });
    $('#unittest-details-history-buttons #btn-stats-week').click(function () { unittestDetailsHistoryLoadStats('@TimelineInterval.Week'); });
    $('#unittest-details-history-buttons #btn-stats-month').click(function () { unittestDetailsHistoryLoadStats('@TimelineInterval.Month'); });
    $('#unittest-details-history-buttons #btn-stats-day').click();

    function unittestDetailsHistoryLoadStats(interval) {
        $('#unittest-details-history-loader').show();

        var url = '@Html.Raw(Url.Action("ForUnitTestByInterval", "Timeline"))';
        var params = { id : '@Model.Id', interval: interval, category: "@EventCategory.UnitTestStatus" };

        $('#unittest-details-history-timeline')
            .load(url,
                params,
                function () {
                    $('#unittest-details-history-loader').hide();
                });
    }
</script>