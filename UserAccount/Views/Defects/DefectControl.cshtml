@using Zidium.Storage
@using Zidium.Core.Common
@using Zidium.UserAccount.Helpers 

@model Zidium.UserAccount.Models.Defects.DefectControlModel

@{
    var eventType = Model.EventType;
    var defect = Model.Defect;
    var enumName = EnumNameHelper.Get(Language.Russian);
    string changeStatusUrl = null;
    string showDefectUrl = null;
    string createUrl = Url.Action("CreateDefectDialog", "Defects", new { eventTypeId = eventType.Id });
    var statusCss = "btn-danger";
    if (defect != null)
    {
        showDefectUrl = Url.Action("Show", "Defects", new { id = defect.Id });
        changeStatusUrl = Url.Action("ChangeStatusDialog", "Defects", new { defectId = defect.Id });
        if (defect.LastChangeId != null)
        {
            if (Model.LastChange.Status == DefectStatus.Closed)
            {
                statusCss = "btn-success";
            }
        }
    }

}

<div id="defect-control-@Model.EventType.Id">
    @if (defect == null || Model.LastChange == null)
    {
        if (UserHelper.CurrentUser(Context).CanEditCommonData())
        {
            <div class="btn-group">
                <a href="#"
                   data-ajax-url="@createUrl"
                   onclick="ziShowModalDialogByLink(this, event)"
                   class="btn btn-default defect-status smart-button">Создать дефект</a>
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown">
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu status-menu-commands">
                    <li>
                        <a href="#"
                           onclick="beginCreateAndCloseDefect(this, event, '@eventType.Id', '@Url.Action("CreateAndCloseDefectForEventType", "Defects")', '@Url.Action("GetDefectControlHtml", "Events")')">Закрыть дефект</a>
                    </li>
                </ul>
            </div>
        }
        else
        {
            <span>Дефект не создан</span>
        }
    }
    else
    {
        <a href="@showDefectUrl" class="defect-name">Дефект @defect.Number</a>

        if (UserHelper.CurrentUser(Context).CanEditCommonData())
        {
            <a href="#"
               class="btn @statusCss defect-status smart-button"
               data-event-type-id="@eventType.Id"
               data-ajax-url="@changeStatusUrl"
               onclick="beginChangeDefectStatus(this, event, '@Url.Action("GetDefectControlHtml", "Events")')">
                @enumName.GetName(Model.LastChange.Status)
            </a>
        }
        else
        {
            <span class="label @statusCss defect-status">@enumName.GetName(Model.LastChange.Status)</span>
        }
    }
</div>