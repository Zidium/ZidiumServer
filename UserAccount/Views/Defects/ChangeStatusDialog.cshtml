@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models.Defects
@model ChangeDefectStatusDialogModel
@{
    ViewBag.Title = "Изменить статус дефекта " + Model.DefectCode;
    Layout = "/Views/Shared/_ModalDlgLayout.cshtml";
}
<div class="form-horizontal" style="padding: 10px;">
    <div class="form-group">
        <label for="defect-status">Новый статус</label>
        @Html.DropDownList("defect-status", DropDownListHelper.GetDefectStatuses(Model.Status), new {@class="form-control"})
    </div>
</div>
<div class="form-horizontal" style="padding: 10px;">
    <div class="form-group">
        <label for="defect-comment">Комментарий</label>
        <textarea class="form-control" id="defect-comment"></textarea>
    </div>
</div>
<div class="row" style="text-align: right">
    <hr/>
    <div class="col-sm-12">
        <a href="#" id="changeDefectStatusSubmitBtn" class="btn btn-primary">Применить</a>
        <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
    </div>
</div>
<script>

    $("#changeDefectStatusSubmitBtn").click(function (event) {
        event.preventDefault();
        var status = $('#defect-status').val();
        var comment = $('#defect-comment').val();
        var btn = $(this);
        var requestData = {
            defectId: '@Model.DefectId',
            status: status,
            comment: comment
        };
        var url = "@Url.Action("ChangeStatusDialogPost")";
        var onSuccess = function () {
            // changeStatusDialogCallback - функция, которая вызывается после выполнения диалога (после успешного post-а)
            // changeStatusDialogCallback должна быть определена на основной странице
            if (typeof changeStatusDialogCallback === "function") {
                changeStatusDialogCallback();
            } else {
                HideModal();
            }
        }
        ziWaitAjaxRequest(btn, url, requestData, onSuccess);
    });
</script>