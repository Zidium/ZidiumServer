@using GridMvc.Html
@using GridMvc.Sorting
@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models
@using Zidium.UserAccount.Models.Controls

@model ComponentsListModel

@{
    ViewBag.Title = "Список компонентов";
    ViewBag.ActiveMenuItems = "Components,ComponentsList";
}

@Html.Partial("_PageTitle")

@if (UserHelper.CurrentUser(Context).CanEditCommonData())
{
    <div style="margin-bottom: 20px;">
        <a href='@Url.Action("Add")' class="btn btn-primary">
            <span class="glyphicon glyphicon-plus"></span>
            Создать новый компонент
        </a>
    </div>
}

<div class="row">
    <div class="col-sm-6 bottom10px">
        @Html.LabelFor(m => m.ComponentTypeId, "Тип")
        @Html.ComponentTypeSelector("ComponentTypeId", Model.ComponentTypeId, true, true)
    </div>
    <div class="col-sm-3 bottom10px">
        @Html.LabelFor(m => m.Color, "Статус")
        @Html.ColorStatusSelector(x => x.Color)
    </div>
</div>

<div class="row">
    <div class="col-sm-6 bottom10px">
        @Html.LabelFor(m => m.Search, "Поиск по названию или Id")
        @Html.TextFilter("Search", "Введите часть названия или Id", Model.Search, true)
    </div>
    <div class="col-sm-6 bottom10px">
        @Html.Label(null, "Родительский компонент", new { @for = "ParentComponentId_Text" })
        @Html.ComponentSelector(x => x.ParentComponentId, new ComponentSelectorOptions()
   {
       AllowEmpty = true,
       AutoRefreshPage = true,
       ShowAsList = false
   })
    </div>
</div>

@Html.Grid(Model.Components).Columns(columns =>
{
    columns.Add().RenderValueAs(m => Html.MonitoringStatusIcon(m.ExternalStatus))
        .Encoded(false).Sanitized(false).Css("text-center");

    columns.Add(m => m.DisplayName).Titled("Дружелюбное имя").RenderValueAs(
        m => Html.HtmlBlock(t => Html.ActionLink(m.DisplayName, "Show", new { id = m.Id }, new { @class = GuiHelper.GetComponentStatusTextCssClass(m.ExternalStatus) })))
        .Encoded(false).Sanitized(false).SortInitialDirection(GridSortDirection.Ascending);

    columns.Add(m => m.SystemName).Titled("Системное имя");

    columns.Add(m => m.ComponentType.DisplayName).Titled("Тип компонента").RenderValueAs(
        m => Html.HtmlBlock(t => Html.ActionLink(m.ComponentType.DisplayName, "Show", "ComponentTypes", new { id = m.ComponentType.Id.ToString() }, null)))
        .Encoded(false).Sanitized(false);

    columns.Add(m => m.Version).Titled("Версия");

    if (UserHelper.CurrentUser(Context).CanEditCommonData())
    {
        columns.Add().Titled(string.Empty).RenderValueAs(m => Html.HtmlBlock(
        @<text>
            <a href='@Url.Action("Delete", new {id = m.Id})'
               onclick="ziShowModalDialogByLink(this, event);"
               title="Удалить компонент" class="text-danger">
                <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>
            </a>
        </text>)).Encoded(false).Sanitized(false).Css("text-center");
     }

 }).Selectable(false)
