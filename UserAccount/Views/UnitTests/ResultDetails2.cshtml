@using Zidium.Core.AccountsDb
@using Zidium.Core.Common.Helpers
@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models

@model UnitTestResult2Model

@{
    ViewBag.Title = Model.PageTitle;
    ViewBag.ActiveMenuItems = "UnitTests";

    var overviewCurrentStatusUrl = Url.Action("OverviewCurrentStatus", new { id = Model.UnitTest.Id });
    var currentUser = UserHelper.CurrentUser(Context);
}

@section styles {
    <style>
        .info-table-column {
            float: left;
            position: relative;
            min-height: 1px;
            padding-right: 45px;
            padding-left: 15px;
        }

        .img-status-icon {
            vertical-align: baseline;
        }

        span.pageHeader1 {
            margin-top: 20px;
            margin-bottom: 10px;
            display: inline-block;
        }

        .big-font {
            font-size: 28px;
        }

        #timeline-status .timeline-subcontainer {
            height: 16px;
        }

        #unittest-status {
            margin-right: 15px;
        }

    </style>
}

<p class="submenu-title">@Model.PageTitle</p>
<div class="zi-bread-crumbs">
    @Html.Partial("~/Views/Controls/UnitTestBreadCrumbs.cshtml", Model.UnitTestBreadCrumbs)
</div>
<br />
@*<hr class="submenu" />*@
@if (Model.UnitTest.IsDeleted)
{
    <div class="alert alert-danger">Проверка удалена...</div>
}
else
{
    <!-- Tab menu -->
    <ul class="nav nav-tabs" role="tablist" style="margin-top: 20px; margin-bottom: 20px;">
        <li role="presentation" class="active"><a href="#overview" aria-controls="overview" role="tab" data-toggle="tab">Обзор</a></li>
        <li role="presentation"><a href="#settings" aria-controls="settings" role="tab" data-toggle="tab">Настройки</a></li>
        <li role="presentation"><a href="#statuses" aria-controls="statuses" role="tab" data-toggle="tab">Статусы</a></li>
        <li role="presentation"><a href="#execution-results" aria-controls="settings" role="tab" data-toggle="tab">Результаты выполнений</a></li>
    </ul>

    <!-- Tab panes -->
    <div class="tab-content">

        <!-- Вкладка - обзор -->
        <div role="tabpanel" class="tab-pane active" id="overview">
            <div class="row tiles-row">
                <div class="col-md-4 tiles-column">
                    @Html.PartialReloadedTile(overviewCurrentStatusUrl)
                </div>
                <div class="col-md-4 tiles-column">
                    @Html.PartialReloadedTile(Url.Action("OverviewLastResult", new { id = Model.UnitTest.Id }))
                </div>
                <div class="col-md-4 tiles-column">
                    @if (Model.UnitTest.TypeId == SystemUnitTestType.HttpUnitTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsHttp", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.PingTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsPing", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.TcpPortTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsTcpPort", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.DomainNameTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsDomain", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.SslTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsSsl", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.SqlTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsSql", new { id = Model.UnitTest.Id }))</text>
                    }
                    else if (Model.UnitTest.TypeId == SystemUnitTestType.VirusTotalTestType.Id)
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsVirusTotal", new { id = Model.UnitTest.Id }))</text>
                    }
                    else
                    {
                        <text>@Html.PartialReloadedTile(Url.Action("OverviewSettingsCustom", new { id = Model.UnitTest.Id }))</text>
                    }
                </div>
            </div>
            <div class="row tiles-row">
                <div class="col-sm-12 tiles-column">
                    @Html.PartialReloadedTile(Url.Action("OverviewStatusDiagram", new { id = Model.UnitTest.Id }))
                </div>
            </div>
        </div>

        <!-- Вкладка - статусы -->
        <div role="tabpanel" class="tab-pane" id="statuses">
            @Html.PartialReloadedTile(Url.Action("ShowStatuses", new { id = Model.UnitTest.Id }))            
        </div>

        <!-- Вкладка - результаты выполнений -->
        <div role="tabpanel" class="tab-pane" id="execution-results">
            @Html.PartialReloadedTile(Url.Action("ShowExecutionResults", new { id = Model.UnitTest.Id }))
        </div>

        <!-- Вкладка настройки -->
        <div role="tabpanel" class="tab-pane" id="settings">
            @Html.Action("ShowSettings", new { id = Model.UnitTest.Id })
        </div>

        <div role="tabpanel" class="tab-pane" id="others">

            <div class="row bottom10px">
                <div class="info-table-column">
                    <p>
                        <span class="simple-text-header">Дата начала статуса:</span>
                        <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.UnitTestBulb.StartDate, currentUser.TimeZoneOffsetMinutes)</span>
                    </p>
                    <p>
                        <span class="simple-text-header">Последняя проверка:</span>
                        <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.UnitTest.LastExecutionDate, currentUser.TimeZoneOffsetMinutes)</span>
                    </p>
                    <p>
                        <span class="simple-text-header">Длительность:</span>
                        <span class="simple-text-value">@GuiHelper.TimeSpanAsString(Model.UnitTestBulb.GetDuration(Model.Now))</span>
                    </p>
                    <p>
                        <span class="simple-text-header">Количество обновлений:</span>
                        <span class="simple-text-value">@Model.UnitTestBulb.Count</span>
                    </p>

                </div>

                <div class="info-table-column" style="display: none;">
                    <p>
                        <span class="simple-text-header">Системное имя:</span>
                        <span class="simple-text-value">@Model.UnitTest.SystemName</span>
                    </p>
                    <p>
                        <span class="simple-text-header">Компонент:</span>
                        @Html.ComponentLink(Model.Component.Id, Model.Component.DisplayName)
                    </p>
                    <p>
                        <span class="simple-text-header">Тип проверки:</span>
                        <a href="@Url.Action("Show", "UnitTestTypes", new { id = Model.UnitTest.TypeId })">@Model.UnitTestType.DisplayName</a>
                    </p>
                    @if (SystemUnitTestType.IsSystem(Model.UnitTest.TypeId))
                    {
                        <p>
                            <span class="simple-text-header">Следующая проверка:</span>
                            <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.UnitTest.NextExecutionDate, currentUser.TimeZoneOffsetMinutes)</span>
                        </p>
                    }
                    <p>
                        <span class="simple-text-header">Актуальна до:</span>
                        <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.UnitTestBulb.ActualDate, currentUser.TimeZoneOffsetMinutes)</span>
                    </p>
                    @if (!SystemUnitTestType.IsSystem(Model.UnitTest.TypeId))
                    {
                        // интервал актуальности показываем только для пользовательских проверок
                        var actualTime = TimeSpanHelper.FromSeconds(Model.UnitTest.ActualTimeSecs);
                        <p>
                            <span class="simple-text-header">Время актуальности:</span>
                            @if (actualTime == null)
                            {
                                <span class="simple-text-value">не задано</span>
                            }
                            else
                            {
                                <span class="simple-text-value">@TimeSpanHelper.Get2UnitsString(actualTime.Value)</span>
                            }
                        </p>
                    }
                    @if (!string.IsNullOrEmpty(Model.LastRunErrorMessage))
                    {
                        <p>
                            <span class="simple-text-header">Последняя ошибка:</span>
                            <span class="simple-text-value">@Model.LastRunErrorMessage</span>
                        </p>
                    }

                </div>

            </div>
        </div>
    </div>
}


<script>

    function reloadTiles() {
        reloadedTiles.reload(".reloaded-tile");
    }

    $(function () {
        setInterval(reloadTiles, 3000);
    });

</script>
