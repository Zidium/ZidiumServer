@using Zidium.Core.AccountsDb
@using Zidium.Core.Api
@using Zidium.Core.Common.Helpers
@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models
@model UnitTestResultModel

@{
    ViewBag.Title = "Результат проверки: " + Model.UnitTest.DisplayName;
    ViewBag.ActiveMenuItems = "UnitTests";
}

@section styles {
    <style>
        .info-table-column {
            float: left;
            position: relative;
            min-height: 1px;
            padding-right: 45px;
            padding-left: 15px;
        }

        .img-status-icon {
            vertical-align: baseline;
        }

        span.pageHeader1 {
            margin-top: 20px;
            margin-bottom: 10px;
            display: inline-block;
        }

        .big-font {
            font-size: 28px;
        }

        #timeline-status .timeline-subcontainer {
            height: 16px;
        }

        #unittest-status {
            margin-right: 15px;
        }

        #table-statuses {
            width: auto;
            margin-top: 10px;
        }

        #last-statuses-caption {
            margin-right: 15px;
        }

        #table-statuses .status-duration {
            color: #999;
            font-size: 10px;
        }

        #table-statuses .status-count {
            color: #999;
            font-size: 10px;
        }
    </style>
}

<p class="submenu-title">Страница проверки</p>
<div class="zi-bread-crumbs">
    @Html.Partial("~/Views/Controls/UnitTestBreadCrumbs.cshtml", Model.UnitTest)
</div>
<hr class="submenu" />

@if (Model.UnitTest.IsDeleted)
{
    <div class="alert alert-danger">Проверка удалена...</div>
}
<div>
    <span id="unittest-status">
        @Html.MonitoringStatusLabel(Model.UnitTest.Bulb.Status, Model.UnitTest.Bulb.StatusEventId)
    </span>
    <span class='@GuiHelper.GetComponentStatusTextCssClass(Model.UnitTest.Bulb.Status) big-font'>
        @Model.UnitTest.DisplayName
    </span>

    <p style="margin-top: 10px;">
        <span class="simple-text-header">Статус длится</span>
        <span class="simple-text-value">@TimeSpanHelper.Get2UnitsString(Model.UnitTest.Bulb.GetDuration(DateTime.Now))</span>,
        <span class="simple-text-header">начался</span>
        <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.Bulb.StartDate)</span>
    </p>
</div>
@if (Model.UnitTest.Bulb.Status == MonitoringStatus.Disabled)
{
    if (Model.UnitTest.DisableToDate == null)
    {
        <p><span class="simple-text-header">Выключена на неопределенный срок</span></p>
    }
    else
    {
        <p>
            <span class="simple-text-header">Выключена до </span>
            <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.DisableToDate)</span>
        </p>
    }
    if (string.IsNullOrEmpty(Model.UnitTest.DisableComment) == false)
    {
        <p><span class="simple-text-header">@Model.UnitTest.DisableComment</span></p>
    }
}

@if (UserHelper.CurrentUser.CanEditCommonData())
{
    <div>
        @Html.ActionLink("Настроить", "Edit", "Checks", new { id = Model.UnitTest.Id }, new { @class = "btn btn-default" })

        @if (Model.UnitTest.Enable)
        {
            @Html.ActionLink("Выключить", "Disable", new { id = Model.UnitTest.Id }, new { @class = "btn btn-default", id = "disableBtn" })
        }
        else
        {
            @Html.ActionLink("Включить", "Enable", new { id = Model.UnitTest.Id }, new { @class = "btn btn-default", id = "enableBtn" })
        }
        <a href='@Url.Action("Delete", new {id = Model.UnitTest.Id})'
           onclick="ModalBtnClick(this, event);"
           class="btn btn-default"
           title="Удалить проверку">
            Удалить
        </a>
        @Html.ActionLink("Установить новый результат", "SetResult", "UnitTests", new { id = Model.UnitTest.Id }, new { @class = "btn btn-default", id = "set-result-link" })
    </div>
}
else
{
    <div>
        @Html.ActionLink("Подробности", "Show", "Checks", new { id = Model.UnitTest.Id }, new { @class = "btn btn-default" })
    </div>
}

<hr class="clearfix" />

<div class="row bottom10px">
    <div class="info-table-column">
        <p>
            <span class="simple-text-header">Дата начала статуса:</span>
            <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.Bulb.StartDate)</span>
        </p>
        <p>
            <span class="simple-text-header">Последняя проверка:</span>
            <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.LastExecutionDate)</span>
        </p>
        <p>
            <span class="simple-text-header">Длительность:</span>
            <span class="simple-text-value">@GuiHelper.TimeSpanAsString(Model.UnitTest.Bulb.GetDuration(DateTime.Now))</span>
        </p>
        <p>
            <span class="simple-text-header">Количество обновлений:</span>
            <span class="simple-text-value">@Model.UnitTest.Bulb.Count</span>
        </p>
        @if (SystemUnitTestTypes.IsSystem(Model.UnitTest.TypeId))
        {
            <p>
                <span class="simple-text-header">Период проверки:</span>
                <span class="simple-text-value">
                    @if (Model.UnitTest.PeriodSeconds.HasValue)
                    {
                        @GuiHelper.TimeSpanAsString(TimeSpan.FromSeconds(Model.UnitTest.PeriodSeconds.Value))
                        if (Model.UnitTest.AttempMax > 1)
                        {
                            <text>(@Model.UnitTest.AttempMax попытки)</text>
                        }
                    }
                    else
                    {
                        <text>не задан</text>
                    }
                </span>
            </p>
            if (Model.UnitTest.HttpRequestUnitTest != null)
            {
                var rule = Model.UnitTest.HttpRequestUnitTest.Rules.First();
                <p>
                    <span class="simple-text-header">Url:</span>
                    <span class="simple-text-value">
                        @rule.Method
                        <a href="@rule.Url" target="_blank">@rule.Url</a>
                    </span>
                </p>
            }

        }
        @if (Model.HasBanner)
        {
            <p>Бесплатная проверка за баннер Zidium</p>
        }
    </div>

    <div class="info-table-column">
        <p>
            <span class="simple-text-header">Системное имя:</span>
            <span class="simple-text-value">@Model.UnitTest.SystemName</span>
        </p>
        <p>
            <span class="simple-text-header">Компонент:</span>
            @Html.ComponentLink(Model.UnitTest.Component)
        </p>
        <p>
            <span class="simple-text-header">Тип проверки:</span>
            <a href="@Url.Action("Show", "UnitTestTypes", new { id = Model.UnitTest.TypeId })">@Model.UnitTest.Type.DisplayName</a>
        </p>
        @if (SystemUnitTestTypes.IsSystem(Model.UnitTest.TypeId))
        {
            <p>
                <span class="simple-text-header">Следующая проверка:</span>
                <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.NextExecutionDate)</span>
            </p>
        }
        <p>
            <span class="simple-text-header">Актуальна до:</span>
            <span class="simple-text-value">@GuiHelper.GetDateTimeString(Model.UnitTest.Bulb.ActualDate)</span>
        </p>
        @if (SystemUnitTestTypes.IsSystem(Model.UnitTest.TypeId) == false)
        {
            // интервал актуальности показываем только для пользовательских проверок
            var actualTime = TimeSpanHelper.FromSeconds(Model.UnitTest.ActualTimeSecs);
            <p>
                <span class="simple-text-header">Время актуальности:</span>
                @if (actualTime == null)
                {
                    <span class="simple-text-value">не задано</span>
                }
                else
                {
                    <span class="simple-text-value">@TimeSpanHelper.Get2UnitsString(actualTime.Value)</span>
                }
            </p>
        }
        @if (Model.UnitTest.HttpRequestUnitTest != null)
        {
            var rule = Model.UnitTest.HttpRequestUnitTest.Rules.First();
            if (!string.IsNullOrEmpty(rule.LastRunErrorMessage))
            {
                <p>
                    <span class="simple-text-header">Последняя ошибка:</span>
                    <span class="simple-text-value">@rule.LastRunErrorMessage</span>
                </p>
            }
        }
    </div>

</div>
<hr class="clearfix" />

<div class="bottom10px">
    <span class="space-right">История за</span>
    <div class="btn-group space-right" data-toggle="buttons">
        <label class="btn btn-default" id="btn-stats-hour">
            <input type="radio" autocomplete="off">
            Час
        </label>
        <label class="btn btn-default active" id="btn-stats-day">
            <input type="radio" autocomplete="off" checked>
            День
        </label>
        <label class="btn btn-default" id="btn-stats-week">
            <input type="radio" autocomplete="off">
            Неделя
        </label>
        <label class="btn btn-default" id="btn-stats-month">
            <input type="radio" autocomplete="off">
            Месяц
        </label>
    </div>
    <span id="timelines-loader" class="collapse">
        <img src="~/Content/Icons/ajax-loader-white.gif" />
    </span>
</div>

<div id="timeline-status">
    <img src="~/Content/Icons/ajax-loader-white.gif" />
</div>

<span class="pageHeader1" id="last-statuses-caption">Последние @UnitTestResultModel.LastStatusesMaxCount статусов</span>
<a href="@Url.Action("Index", "Events", new { category = EventCategory.UnitTestStatus, unitTestId = Model.UnitTest.Id })" class="btn btn-default">Все статусы</a>
<a href="@Url.Action("Index", "Events", new { category = EventCategory.UnitTestResult, unitTestId = Model.UnitTest.Id })" class="btn btn-default">Все результаты</a>

@if (Model.Statuses.Length > 0)
{
    <table class="table simpleTableClear" id="table-statuses">
        <thead>
            <tr>
                <th class="column-date">Начало</th>
                <th class="column-date">Окончание</th>
                <th>Статус</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var status in Model.Statuses)
            {
                var color = GuiHelper.GetStrongFgColor(status.Importance);
                <tr style="color: @color">
                    <td>
                        @DateTimeHelper.GetRussianDateTime(status.StartDate)
                        <br />
                        <span class="status-duration">@GuiHelper.TimeSpanAs2UnitString(status.Duration)</span>
                    </td>
                    <td>
                        @DateTimeHelper.GetRussianDateTime(status.EndDate)
                        <br />
                        <span class="status-count">
                            @status.Count раз
                        </span>
                    </td>
                    <td>
                        <a title="@status.Message" href="@Url.Action("Show", "Events", new { id = status.LastStatusEventId})">@status.Message</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p id="table-statuses">Нет истории выполнения</p>
}

<script>

    $(function () {
        ziCreateModalDialog("#disableBtn");
        ziSetAjaxLink("#enableBtn");
        ziCreateModalDialog("#set-result-link");

        $('#btn-stats-hour').click(function () { loadStats('@TimelineInterval.Hour'); });
        $('#btn-stats-day').click(function () { loadStats('@TimelineInterval.Day'); });
        $('#btn-stats-week').click(function () { loadStats('@TimelineInterval.Week'); });
        $('#btn-stats-month').click(function () { loadStats('@TimelineInterval.Month'); });
        $('#btn-stats-day').click();

    });

    function loadStats(interval) {
        $('#timelines-loader').show();

        var url = '@Html.Raw(Url.Action("ForUnitTestByInterval", "Timeline", new { id = Model.UnitTest.Id, category = EventCategory.UnitTestStatus }))';
        var params = { interval: interval };

        $('#timeline-status')
            .load(url,
                params,
                function () {
                    $('#timelines-loader').hide();
                });
    }

</script>
