@model Zidium.UserAccount.Models.UnitTestSetResultModel

@{
    ViewBag.Title = "Установка результата проверки";
    Layout = "~/Views/Shared/_ModalDlgLayout.cshtml";
}

<style>
    #form-set-result .smart-col-labels {
        min-width: 100px;
    }
</style>

<div class="alert alert-info">Укажите новый результат для проверки @Model.DisplayName</div>

@using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "form-horizontal", id = "form-set-result" }))
{
    @Html.HiddenFor(m => m.Id)

    <div class="alert alert-danger" id="errorMessage" style="display: none"></div>

    <div class="smart-container">
        @Html.EditorFor(m => m.Result, "SmartEdit")
        @Html.EditorFor(m => m.Message, "SmartEdit")
        @Html.EditorFor(m => m.ActualInterval, "SmartEdit")

        <div class="smart-row">
            <div class="smart-col-labels smart-col-empty"></div>
            <div class="smart-col-fields">
                <div>
                    <button type="submit" class="btn btn-primary">Установить</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Отмена</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        var form = $("#form-set-result");
        form.submit(setUnitTestResultSubmit);
    });

    function setUnitTestResultSubmit(event) {
        event.preventDefault();
        var form = $("#form-set-result");
        if (!form.valid())
            return false;

        var button = $('button[type="submit"]', form);
        var onSuccess = null; // будет перезагружена страница
        var onError = function (errorMessage) {
            var alertDiv = $("#errorMessage", form);
            alertDiv.text(errorMessage);
            alertDiv.show();
        }
        var url = form.attr('action');
        var data = form.serializeArray();
        ziWaitAjaxRequest(button, url, data, onSuccess, onError);
        return false;
    }
</script>