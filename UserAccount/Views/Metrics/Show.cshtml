@using Zidium.Core.Common.Helpers
@using Zidium.Api.Dto
@using Zidium.UserAccount.Helpers
@using Zidium.UserAccount.Models
@using Zidium.UserAccount.Models.Metrics

@model ShowModel

@{
    ViewBag.Title = Model.Metric.DisplayName + " - Метрика";
    ViewBag.ActiveMenuItems = "Metrics";
    var currentUser = UserHelper.CurrentUser(Context);
}

@section styles {
    <style>
        .info-table-column {
            float: left;
            position: relative;
            min-height: 1px;
            padding-right: 45px;
            padding-left: 15px;
        }

        .img-status-icon {
            vertical-align: baseline;
        }

        span.pageHeader1 {
            margin-top: 20px;
            margin-bottom: 10px;
            display: inline-block;
        }

        .big-font {
            font-size: 28px;
        }

        #timeline-status .timeline-subcontainer {
            height: 16px;
        }

        #metric-value {
            margin-right: 15px;
        }

        #graph {
            height: 500px;
        }
    </style>
}

<p class="submenu-title">Страница метрики</p>
<div class="zi-bread-crumbs">
    @Html.Partial("~/Views/Controls/MetricBreadCrumbs.cshtml", Model.MetricBreadCrumbs)
</div>
<hr class="submenu" />    

<div>
    <span id="metric-value">
        <span class="@GuiHelper.GetMonitoringStatusLabelCssClass(Model.Metric.Bulb.Status)" style="font-size: 28px; font-weight: normal;">@(Model.Metric.Value.HasValue ? Model.Metric.Value.ToString() : "null")</span>
    </span>
    <span class='@GuiHelper.GetComponentStatusTextCssClass(Model.Metric.Bulb.Status) big-font'>
        @Model.Metric.DisplayName
    </span>

    <p style="margin-top: 10px;">
        <span class="simple-text-header">Статус длится</span>
        <span class="simple-text-value">@TimeSpanHelper.Get2UnitsString(Model.Metric.Bulb.Duration)</span>,
        <span class="simple-text-header">начался</span>
        <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.Metric.Bulb.StartDate, currentUser.TimeZoneOffsetMinutes)</span>
    </p>
</div>

@if (UserHelper.CurrentUser(Context).CanEditCommonData())
{
    <div>
        @Html.ActionLink("Настроить", "Edit", "Metrics", new { id = Model.Metric.Id }, new { @class = "btn btn-default" })
        @Html.ActionLink("Установить новое значение", "SetActualValue", "Metrics", new { id = Model.Metric.Id }, new { @class = "btn btn-default ajax-dialog", id = "set-value-link" })
    </div>
}

<hr />

<div class="row bottom10px">
    <div class="info-table-column">
        <p>
            <span class="simple-text-header">Тип метрики: </span>
            <span class="simple-text-value">
                @Html.ActionLink(Model.Metric.DisplayName, "Show", "MetricTypes", new { id = Model.Metric.MetricTypeId }, null)
            </span>
        </p>
        <p>
            <span class="simple-text-header">Компонент:</span>
            @Html.ComponentLink(Model.Metric.Component.Id, Model.Metric.Component.FullName)
        </p>
        <p>
            <span class="simple-text-header">Дата начала статуса:</span>
            <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.Metric.Bulb.StartDate, currentUser.TimeZoneOffsetMinutes)</span>
        </p>
        <p>
            <span class="simple-text-header">Последняя проверка:</span>
            <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.Metric.Bulb.EndDate, currentUser.TimeZoneOffsetMinutes)</span>
        </p>
        <p>
            <span class="simple-text-header">Длительность:</span>
            <span class="simple-text-value">@GuiHelper.TimeSpanAsString(Model.Metric.Bulb.Duration)</span>
        </p>
        <p>
            <span class="simple-text-header">Количество обновлений:</span>
            <span class="simple-text-value">@Model.Metric.Bulb.Count</span>
        </p>
        <p>
            <span class="simple-text-header">Актуальна до:</span>
            <span class="simple-text-value">@DateTimeHelper.GetRussianDateTime(Model.Metric.Bulb.ActualDate, currentUser.TimeZoneOffsetMinutes)</span>
        </p>
    </div>

    <div class="info-table-column">
        <p>
            <strong>Правила для цветов</strong>
        </p>
        <p>
            <span class="simple-text-header">Красный: </span>
            <span class="simple-text-value">@Model.ConditionRed</span>
        </p>
        <p>
            <span class="simple-text-header">Жёлтый: </span>
            <span class="simple-text-value">@Model.ConditionYellow</span>
        </p>
        <p>
            <span class="simple-text-header">Зелёный: </span>
            <span class="simple-text-value">@Model.ConditionGreen</span>
        </p>
        <p>
            <span class="simple-text-header">Иначе: </span>
            <span class="simple-text-value">@(Model.ElseColor.HasValue ? Zidium.UserAccount.Helpers.EnumHelper.EnumToString(Model.ElseColor.Value) : "не задано")</span>
        </p>
        <p>
            <span class="simple-text-header">Если нет сигнала: </span>
            <span class="simple-text-value">@(Model.NoSignalColor.HasValue ? Zidium.UserAccount.Helpers.EnumHelper.EnumToString(Model.NoSignalColor.Value) : "не задано")</span>
        </p>
        <p>
            <span class="simple-text-header">Интервал актуальности:</span>
            <span class="simple-text-value">@(Model.ActualInterval.HasValue ? GuiHelper.TimeSpanAsString(Model.ActualInterval) : "не задан")</span>
        </p>

    </div>  
</div>

<hr class="clearfix" />

<div class="bottom10px">
    <span class="space-right">История за</span>
    <div class="btn-group space-right" data-toggle="buttons">
        <label class="btn btn-default" id="btn-stats-hour">
            <input type="radio" autocomplete="off">
            Час
        </label>
        <label class="btn btn-default active" id="btn-stats-day">
            <input type="radio" autocomplete="off" checked>
            День
        </label>
        <label class="btn btn-default" id="btn-stats-week">
            <input type="radio" autocomplete="off">
            Неделя
        </label>
        <label class="btn btn-default" id="btn-stats-month">
            <input type="radio" autocomplete="off">
            Месяц
        </label>
    </div>
    <span id="timelines-loader" class="collapse">
        <img src="~/Content/Icons/ajax-loader-white.gif" />
    </span>
</div>

<div id="timeline-status">
    <img src="~/Content/Icons/ajax-loader-white.gif" />
</div>

<div id="graph">
    <img src="~/Content/Icons/ajax-loader.gif" />
</div>

<hr class="clearfix" />

<span class="pageHeader1">Последние @ShowModel.LastValuesCountMax значений</span>

<a style="margin-left: 50px;" class="btn btn-default" href='@Url.Action("Index", "MetricsData", new { componentId = Model.Metric.Component.Id, metricTypeId = Model.Metric.MetricTypeId })'>
    Все значения за 24 часа
</a>

<table class="simpleTable" style="width: auto;">
    <thead>
        <tr>
            <th class="column-date">Дата начала</th>
            <th>Значение</th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Values.Length == 0)
        {
            <tr>
                <td colspan="3">Нет результатов</td>
            </tr>
        }
        else
        {
            foreach (var value in Model.Values)
            {
                <tr>
                    <td class="text-nowrap">@DateTimeHelper.GetRussianDateTime(value.BeginDate, currentUser.TimeZoneOffsetMinutes)</td>
                    <td class="text-center">
                        <span title="Актуально до @DateTimeHelper.GetRussianDateTime(value.ActualDate, currentUser.TimeZoneOffsetMinutes)">
                            @GuiHelper.GetMetricValueHtml(value.Value, value.Color, value.HasSignal)
                        </span>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<script>

    $(function () {
        ziCreateModalDialog(".ajax-dialog");

        $('#btn-stats-hour').click(function () { loadStats('@TimelineInterval.Hour'); });
        $('#btn-stats-day').click(function () { loadStats('@TimelineInterval.Day'); });
        $('#btn-stats-week').click(function () { loadStats('@TimelineInterval.Week'); });
        $('#btn-stats-month').click(function () { loadStats('@TimelineInterval.Month'); });
        $('#btn-stats-day').click();
    });

    function loadStats(interval) {
        $('#timelines-loader').show();

        var url = '@Html.Raw(Url.Action("ForMetricByInterval", "Timeline", new { id = Model.Metric.Id, category = EventCategory.MetricStatus }))';
        var params = { interval: interval };

        $('#timeline-status')
            .load(url,
                params,
                function () {
                    var graphUrl = '@Url.Action("GraphByInterval", "MetricsData")';
                    var graphParameters = { id : '@Model.Metric.Id', interval: interval };

                    $('#graph').load(graphUrl,
                        graphParameters,
                        function() {
                            $('#timelines-loader').hide();
                        });
                });
    }

</script>